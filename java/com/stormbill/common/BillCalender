package com.stormbill.stormbill.common;

import com.stormbill.stormbill.common_type.CalenderDate;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.TimeZone;

public class BillCalender
{
	public ArrayList<CalenderDate> getCalender(int year, int month)
	{
		ArrayList<CalenderDate> datas = new ArrayList<>();
		Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("GMT+08:00"));
		int curDay = calendar.get(Calendar.DAY_OF_MONTH); // 当前几号
		int curMonth = calendar.get(Calendar.MONTH) + 1; // 当前月
		int lastDay = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
		calendar.add(Calendar.MONTH, month - curMonth);
		calendar.add(Calendar.DATE, -curDay);

		int day_of_week = calendar.get(Calendar.DAY_OF_WEEK);// 每月1号是周几
		switch(day_of_week)
		{
			case 0:
				break;
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			{
				calendar.add(Calendar.DATE, -day_of_week);
				for(int i = 0; i < day_of_week; i++)
				{
					calendar.add(Calendar.DATE, +1);
					CalenderDate calenderDate = new CalenderDate();
					calenderDate.setYear(year);
					calenderDate.setMonth(month);
					calenderDate.setDay(0);
					datas.add(calenderDate);
				}
			}
			break;
		}

		int curCount = datas.size();
		int needDays;
		if(day_of_week == 0)
			calendar.add(Calendar.DATE, -1);

		if(35 - curCount < lastDay)
			needDays = 42 - curCount;
		else
			needDays = 35 - curCount;

		for(int i = 0; i < needDays; i++)
		{
			CalenderDate calenderDate = new CalenderDate();
			calenderDate.setYear(year);
			calenderDate.setMonth(month);
			calenderDate.setDay(0);

			if(i < lastDay)
			{
				calendar.add(Calendar.DATE, +1);
				int day = calendar.get(Calendar.DAY_OF_MONTH); // 当前几号
				calenderDate.setDay(day);
				datas.add(calenderDate);
			}
			else
			{
				calenderDate.setDay(0);
				datas.add(calenderDate);
			}
		}

		return datas;
	}
}
