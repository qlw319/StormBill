package com.stormbill.stormbill.data_manager;

import com.stormbill.stormbill.common_type.BillTypes;
import com.stormbill.stormbill.database_manager.SQLiteDatabaseManager;

import java.util.ArrayList;

import static com.stormbill.stormbill.initialization_information.CommonInitInfor.AllIncomedAndPayBackground;

public class BillTypeManager
{
	public static boolean LoadBillType(ArrayList<BillTypes> arrIncomeBillTypeList, ArrayList<BillTypes> arrPayBillTypeList, SQLiteDatabaseManager sqLiteDatabaseManager)
	{
		boolean bLoadIncomeResult = sqLiteDatabaseManager.LoadIncomeBillType(arrIncomeBillTypeList);
		boolean bLoadPayResult = sqLiteDatabaseManager.LoadPayBillType(arrPayBillTypeList);
		if(bLoadIncomeResult && bLoadPayResult)
			return true;

		return false;
	}

	public static boolean ChangeName(ArrayList<BillTypes> arrBillTypeList, int nIndex, String strNewName, SQLiteDatabaseManager sqLiteDatabaseManager, boolean bIncome)
	{
		if(strNewName == null || strNewName.length() == 0)
			return false;

		if(arrBillTypeList == null || nIndex >= arrBillTypeList.size())
			return false;

		BillTypes modify = new BillTypes();
		modify.strName = strNewName;
		modify.nPicture = arrBillTypeList.get(nIndex).nPicture;
		modify.nBillTypeID = arrBillTypeList.get(nIndex).nBillTypeID;
		boolean bResult = false;
		if(bIncome)
			bResult = sqLiteDatabaseManager.ModifyAIncomeBillType(modify);
		else
			bResult = sqLiteDatabaseManager.ModifyAPayBillType(modify);

		if(bResult == false)
			return false;

		BillTypes billType = arrBillTypeList.get(nIndex);
		billType.strName = strNewName;

		return true;
	}

	public static boolean ChangePicture(ArrayList<BillTypes> arrBillTypeList, int nIndex, int nNewPicture, SQLiteDatabaseManager sqLiteDatabaseManager, boolean bIncome)
	{
		if(IsExistPicture(nNewPicture) == false)
			return false;

		if(arrBillTypeList == null || nIndex >= arrBillTypeList.size())
			return false;

		BillTypes modify = new BillTypes();
		modify.strName = arrBillTypeList.get(nIndex).strName;
		modify.nPicture = nNewPicture;
		modify.nBillTypeID = arrBillTypeList.get(nIndex).nBillTypeID;
		boolean bResult = false;
		if(bIncome)
			bResult = sqLiteDatabaseManager.ModifyAIncomeBillType(modify);
		else
			bResult = sqLiteDatabaseManager.ModifyAPayBillType(modify);

		if(bResult == false)
			return false;

		return true;
	}

	public static boolean ModifyType(ArrayList<BillTypes> arrBillTypeList, int nIndex, String strNewName, int nNewPicture, SQLiteDatabaseManager sqLiteDatabaseManager, boolean bIncome)
	{
		if(strNewName == null || IsExistPicture(nNewPicture) == false)
			return false;

		if(arrBillTypeList == null || nIndex >= arrBillTypeList.size())
			return false;

		BillTypes modify = new BillTypes();
		modify.strName = strNewName;
		modify.nPicture = nNewPicture;
		modify.nBillTypeID = arrBillTypeList.get(nIndex).nBillTypeID;
		boolean bResult = false;
		if(bIncome)
			bResult = sqLiteDatabaseManager.ModifyAIncomeBillType(modify);
		else
			bResult = sqLiteDatabaseManager.ModifyAPayBillType(modify);

		if(bResult == false)
			return false;

		BillTypes billType = arrBillTypeList.get(nIndex);
		billType.strName = strNewName;
		billType.nPicture = nNewPicture;

		return true;
	}

	public static boolean AddType(ArrayList<BillTypes> arrBillTypeList, BillTypes eNewBillType, SQLiteDatabaseManager sqLiteDatabaseManager, boolean bIncome)
	{
		if(arrBillTypeList == null)
			return false;

		for(int i = 0; i < arrBillTypeList.size(); ++i)
		{
			BillTypes billTypes = arrBillTypeList.get(i);
			if(eNewBillType.strName == billTypes.strName && eNewBillType.nPicture == billTypes.nPicture)
				return false;
		}

		boolean bResult = false;
		if(bIncome)
			bResult = sqLiteDatabaseManager.AddAIncomeBillType(eNewBillType);
		else
			bResult = sqLiteDatabaseManager.AddAPayBillType(eNewBillType);

		if(bResult == false)
			return false;

		arrBillTypeList.add(eNewBillType);

		return true;
	}

	public static boolean IsExistPicture(int nPicture)
	{
		for(int i = 0; i < AllIncomedAndPayBackground.length; ++i)
		{
			if(nPicture == AllIncomedAndPayBackground[i])
				return true;
		}
		return false;
	}
}
